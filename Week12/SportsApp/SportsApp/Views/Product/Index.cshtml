@model PaginatedList<Product>

<h3>Product Management</h3>

<a href="Product/Create"><button class="btn btn-primary">Add New Product</button></a>
<br><br>

<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            <label>Find product: <input type="text" name="searchString" value="@ViewData["ProductFilter"]" /></label>
            <input type="submit" value="Search" class="btn btn-default" /> 
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @*
                The asp-route-* syntax appends query string parameters.
                asp-route-sortOrder adds a query string parameter sortOrder to the generated URL: e.g., /Product/Index?sortOrder=id_desc
                The value of the sortOrder parameter is dynamically set to whatever value is stored in ViewData["IdSortParm"]
                *@
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]">Product Id</a>*@

                @if(User.IsInRole("Admin")){ 
                    <a asp-action="Index" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-productFilter="@ViewData["ProductFilter"]">Product Id</a>
                }
            </th>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Product Name</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-productFilter="@ViewData["ProductFilter"]">Product Name</a>
            </th>
            <th>Product Description</th>
            <th>
                @*<a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]">Price</a>*@
                <a asp-action="Index" asp-route-sortOrder="@ViewData["PriceSortParm"]" asp-route-productFilter="@ViewData["ProductFilter"]">Price</a>
            </th>
            <th>Product Category (ID / Name)</th>
        </tr>      
    </thead>
    <tbody>
        @foreach (var pr in Model){
            <tr>
                <td>@if(User.IsInRole("Admin")){ @pr.ProductID }</td>
                <td>@pr.Name</td>
                <td>@pr.Description</td>
                <td>@pr.Price</td>
                <td>@pr.ProductCategoryID / @pr.ProductCategory.Name</td>
                <td>
                    @if(User.IsInRole("Admin")){ 
                        <a asp-controller="Product" asp-action="Update" asp-route-id="@pr.ProductID" class="btn btn-primary btn-sm">Update</a>
                        <a asp-controller="Product" asp-action="Delete" asp-route-id="@pr.ProductID" class="btn btn-danger btn-sm">Delete</a>
                    }
                    @if(User.IsInRole("User")){ 
                        <a asp-controller="Order" asp-action="AddToBasket" asp-route-id="@pr.ProductID" class="btn btn-primary btn-sm">Add Basket</a>
                        <a asp-controller="ProductReview" asp-action="Index" asp-route-id="@pr.ProductID" class="btn btn-primary btn-sm">Rates & Comments</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-productFilter="@ViewData["ProductFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-productFilter="@ViewData["ProductFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>